import json
import requests
import pandas as pd


def getuser_id():
    response = requests.post('https://api.zoom.us/v1/user/list',
                              data=dict(
                                      api_key=******,
                                      api_secret=****************,
                                      page_number=1,
                                      page_size=300))
    if response.status_code == 200:
        content = json.loads(response.content)
        return content['users'][0]['id']
    else :
        ok = "error"
        return ok

def get_recordings():
    response = requests.post('https://api.zoom.us/v1/recording/list',
                             data=dict(
                                 api_key='y-TxRtEVTPG7p00R5KJgZg',
                                 api_secret='ndpzZpvsJqutuzW3Ki8m0Hx0p6vAO7GYKDlE',
                                 page_number=1,
                                 page_size = 300,
                                 host_id=getuser_id()))
    if response.status_code == 200:
        recordings = json.loads(response.content)
        return recordings
    else :
        return None
def get_download_link():
    recordings = get_recordings()
    list=[]
    if (recordings != None):
        #for i in range(len(recordings['meetings'])):
        uuid = recordings['meetings'][0]['uuid']
        start_time=recordings['meetings'][0]['start_time']
        recording_data = recordings['meetings'][0]['recording_files']
        for i in range(len(recording_data)):
            if(recording_data[i]['file_type']=='MP4'):
                list.append(recording_data[i]['download_url'])
        return(list)




def download_recording():
    list_recording=get_download_link()
    url = str(list_recording[0])
    r = requests.get(url, allow_redirects=True)
    filename='/home/radia/Bureau/ok.mp4'
    with open(filename, 'wb') as f:
        f.write(r.content)

download_recording()




def get_file_size(): #convert to GB
    somme = 0
    recordings = get_recordings()
    if(recordings != None):
        for i in range(len(recordings['meetings'])) :
                #print(recordings['meetings'][i])
                #fileSize recordings['meetings][i][total_size]
                somme = somme + recordings['meetings'][i]['total_size']
            #print(somme) ~ 13 GB


def get_start_recording_time():
    data ={} #uuid start_time download_link
    recordings=get_recordings()
    if (recordings != None):
        for i in range(len(recordings['meetings'])):
        # print(somme) ~ 13 GB
            start_time = recordings['meetings'][i]['start_time']
            return start_time

def creating_DataFrame():
    recordings = get_recordings()
    data =[]
    if (recordings != None):
        for i in range(len(recordings['meetings'])):
            data.append(
                [recordings['meetings'][i]['uuid'] ,
                []
            ])
        df = pd.DataFrame(data , columns = ['uuid','name','dwld_link','moved'])
    return df

